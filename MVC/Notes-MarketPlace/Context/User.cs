//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Notes_MarketPlace.Context
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Web.Mvc;

    public partial class User
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public User()
        {
            this.Downloads = new HashSet<Download>();
            this.Downloads1 = new HashSet<Download>();
            this.SellerNotes = new HashSet<SellerNote>();
            this.SellerNotes1 = new HashSet<SellerNote>();
            this.SellerNotesReportedIssues = new HashSet<SellerNotesReportedIssue>();
            this.SellerNotesReviews = new HashSet<SellerNotesReview>();
            this.UserProfiles = new HashSet<UserProfile>();
        }
        [Required]
        public int ID { get; set; }

        [Required]
        public int RoleID { get; set; }

        [Required(ErrorMessage = "Required")]
        [RegularExpression("[a-zA-Z_]+", ErrorMessage = "Enter Alphabatic Charcters Only")]
        public string FirstName { get; set; }


        [Required(ErrorMessage = "Required")]
        [RegularExpression("[a-zA-Z_]+", ErrorMessage = "Enter Alphabatic Charcters Only")]
        public string LastName { get; set; }


        [Required(ErrorMessage = "Required")]
        [EmailAddress]
        //[Remote("IsEmailExist", "User", ErrorMessage = "Email Address Already Exist")]
        public string EmailID { get; set; }


        [Required(ErrorMessage = "Required")]
        [RegularExpression("^(?=.{6,24})(?=.*[a-z])(?=.*[@#$%^&+=]).*$", ErrorMessage = "Invalid Password")]
        public string Password { get; set; }




        [Required(ErrorMessage = "Required")]
        [NotMapped]
        [System.ComponentModel.DataAnnotations.Compare("Password", ErrorMessage = "Enter same Password")]
        public string ConformPassword { get; set; }


        public bool IsEmailVerified { get; set; }
        public Nullable<System.DateTime> CreatedDate { get; set; }
        public Nullable<int> CreatedBy { get; set; }
        public Nullable<System.DateTime> ModifiedDate { get; set; }
        public Nullable<int> ModifiedBy { get; set; }
        public bool IsActive { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Download> Downloads { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Download> Downloads1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SellerNote> SellerNotes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SellerNote> SellerNotes1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SellerNotesReportedIssue> SellerNotesReportedIssues { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SellerNotesReview> SellerNotesReviews { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<UserProfile> UserProfiles { get; set; }
        public virtual UserRole UserRole { get; set; }
    }
}
